import streamlit as stimport numpy as npimport pandas as pdimport seaborn as snsimport matplotlib.pyplot as pltimport plotly.express as pximport plotly.graph_objects as godataResults = pd.read_csv("f1db_csv/results.csv")dataRaces = pd.read_csv("f1db_csv/races.csv")dataDrivers = pd.read_csv("f1db_csv/drivers.csv")dataLapTimes = pd.read_csv("f1db_csv/lap_times.csv")dataQuali = pd.read_csv("f1db_csv/qualifying.csv")dataConstructorResults = pd.read_csv("f1db_csv/constructor_results.csv")dataDriverStandings = pd.read_csv("f1db_csv/driver_standings.csv")dataConstructorStandings = pd.read_csv("f1db_csv/constructor_standings.csv")dataPitStops = pd.read_csv("f1db_csv/pit_stops.csv")dataDriverResults = pd.merge(dataDrivers, dataResults, on="driverId")dataDriverResultsRaces = pd.merge(dataDriverResults, dataRaces, on="raceId")dataDriverResultsRaces = dataDriverResultsRaces[dataDriverResultsRaces.year > 2009]dataDriverResultsRaces["driver"] = dataDriverResultsRaces["forename"] + " " + dataDriverResultsRaces["surname"]dataAveragePoints = dataDriverResultsRaces[['driver', 'points']].groupby("driver").mean()dataCountPoints = dataDriverResultsRaces[['driver', 'raceId']].groupby("driver").count()dataCountPoints = dataCountPoints[dataCountPoints.raceId > 100]datafinalAverage = pd.merge(dataAveragePoints, dataCountPoints, on="driver")avgfig = px.scatter(datafinalAverage, x = "raceId", y = "points", size="points")st.plotly_chart(avgfig)st.dataframe(datafinalAverage)dataTotalPoints = dataDriverResultsRaces.groupby("driver").sum()